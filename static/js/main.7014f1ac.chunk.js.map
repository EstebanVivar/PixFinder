{"version":3,"sources":["components/ErrorComponent.js","components/Form.js","components/ContainerImages.js","Final.gif","App.js","reportWebVitals.js","index.js"],"names":["ErrorComponent","error","className","Form","setSearch","useState","Keyword","setKeyword","Error","setError","onSubmit","e","preventDefault","trimEnd","type","placeholder","onChange","target","value","ContainerImages","Results","ImagesJSON","sort","Math","random","find","map","image","push","src","largeImageURL","thumbnail","webformatURL","thumbnailWidth","previewWidth","thumbnailHeight","previewHeight","enableImageSelection","images","backdropClosesModal","App","Search","setResults","Page","setPage","Pages","setPages","Initial","setInitial","useEffect","requestAPI","a","imagesOnPage","url","replace","fetch","response","json","results","hits","ceil","totalHits","document","querySelector","scrollIntoView","behavior","style","height","background","textAlign","href","color","fontSize","fontFamily","width","GIF","alt","marginBottom","onClick","newPage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.7014f1ac.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst ErrorComponent = ({ error }) => {\r\n  return (\r\n    <p className=\"mt-3 p-4 text-center  alert alert-danger\">{error}</p>\r\n  );\r\n}\r\n\r\nexport default ErrorComponent;","import React, { useState } from 'react';\r\nimport ErrorComponent from './ErrorComponent';\r\n\r\n\r\nconst Form = ({ setSearch }) => {\r\n    const [Keyword, setKeyword] = useState('');\r\n    const [Error, setError] = useState(false)\r\n    const search = e => {\r\n        e.preventDefault();\r\n\r\n        if (Keyword.trimEnd() === \"\") {\r\n            setError(true)\r\n            return;\r\n        }\r\n        setError(false)\r\n        setSearch(Keyword)\r\n    }\r\n    return (\r\n        <form\r\n            onSubmit={search}>\r\n            <div className=\"row\">\r\n                <div className=\"form-group col-md-8\">\r\n                    <input\r\n                        type=\"text\"\r\n                        className=\"form-control form-control-lg\"\r\n                        placeholder=\"Search an image, i.e: soccer\"\r\n                        onChange={e => setKeyword(e.target.value)}\r\n                    />\r\n\r\n\r\n                </div>\r\n                <div className=\"form-group col-md-4 \">\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"btn btn-lg btn-dark btn-block\"\r\n                        value=\"Search\" />\r\n\r\n                </div>\r\n            </div>\r\n            {Error ? <ErrorComponent error=\"Type a keyword to search\" /> : null}\r\n        </form >\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport Gallery from 'react-grid-gallery';\r\nconst ContainerImages = ({ Results }) => {\r\n    let ImagesJSON = []\r\n\r\n    function DATA() {\r\n        Results.sort(() => Math.random() - Math.random())\r\n            .find(() => true);\r\n        Results.map(image => (\r\n            ImagesJSON.push({\r\n                src: image.largeImageURL,\r\n                thumbnail: image.webformatURL,\r\n                thumbnailWidth: image.previewWidth,\r\n                thumbnailHeight: image.previewHeight\r\n               \r\n            })))\r\n    }\r\n    DATA();\r\n    return (\r\n        <div className=\"container\">\r\n            <Gallery enableImageSelection={false} images={ImagesJSON} backdropClosesModal={true} />\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ContainerImages;","export default __webpack_public_path__ + \"static/media/Final.392f6a31.gif\";","import React, { useState, useEffect } from 'react';\nimport Form from './components/Form';\nimport ContainerImages from './components/ContainerImages';\n\nimport GIF from './Final.gif';\n\n\nfunction App() {\n  const [Search, setSearch] = useState(\"\");\n  const [Results, setResults] = useState([]);\n  const [Page, setPage] = useState(1);\n  const [Pages, setPages] = useState(1);\n  const [Initial, setInitial] = useState(true)\n\n\n  useEffect(() => {\n    const requestAPI = async () => {\n      if (Search === \"\") {\n        return;\n      }\n      const imagesOnPage = 30;\n      const key = \"23686731-d7a837d5f9b30045c039ab2a7\"\n      const url = `https://pixabay.com/api/?key=${key}&q=${Search.replace(\" \", \"+\")}&per_page=${imagesOnPage}&page=${Page}`;\n      const response = await fetch(url);\n      const results = await response.json();\n\n\n      setResults(results.hits);\n      setPages(Math.ceil(results.totalHits / imagesOnPage));\n      const jumbotron = document.querySelector(\".page-header\");\n      jumbotron.scrollIntoView({ behavior: \"smooth\" });\n\n      if (results.totalHits > 0) {\n        setInitial(false);\n        return;\n      }\n      setInitial(true);\n    }\n    requestAPI();\n  }, [Search, Page])\n  const previousPage = () => {\n    const newPage = Page - 1;\n\n    if (newPage === 0) {\n      return;\n    }\n    setPage(newPage);\n  }\n\n  const nextPage = () => {\n    const newPage = Page + 1;\n\n    if (newPage > Pages) {\n      return;\n    }\n    setPage(newPage);\n  }\n\n  return (\n    <div className=\"container\" style={{ height: 100 + \"vh\" }} >\n      <div className=\"page-header  rounded\" style={{ background: \"transparent\", textAlign: \"center\" }}>\n        <a href=\"/PixFinder/\" className=\"mb-3 mt-2\" style={{\n          color: \"white\", fontSize: 40 + \"px\", fontFamily: 'Varela Round', width: 50 + \"%\",\n          textAlign: \"center\"\n        }}>\n          <img src={GIF} alt=\"logo\" style={{height:20+\"vh\", marginBottom:\"1\"}}></img>\n          \n        </a>\n        \n        <Form\n          setSearch={setSearch} />\n      </div>\n      <div className=\"row justify-content-center\">\n        {(Results === 0) ? null :\n          <ContainerImages Results={Results} />\n        }\n        <br/>\n        {(Page === 1 || Initial) ? null :\n          <button\n            type=\"button\"\n            className=\"btn btn-info mr-1 mt-2 mb-3\"\n            onClick={previousPage}>\n\n            &#8592; Previous\n          </button>}\n        {(Page === Pages || Initial) ? null :\n          <button\n            type=\"button\"\n            className=\"btn btn-info mr-1 mt-2 mb-3\"\n            onClick={nextPage}>\n            Next &#8594;\n          </button>}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}